---
  - name: "Run ETH node and setup Nginx"
    hosts: localhost
    connection: local 
    become: yes
    become_method: sudo
    vars:
       external_rpc_port: 80
       external_ip: localhost
       ethnode_persistant_storage: /data/etherium
       goeth_docker_image: ethereum/client-go
       container_name: ETH_node

    tasks:
    - name: Creates directory for persistant store eth
      file:
        path: "{{ ethnode_persistant_storage }}"
        state: directory

    - name: Run eth docker image
      docker_container:
        name: "{{ container_name }}"
        recreate: yes
        image: "{{ goeth_docker_image }}"
        command: ["--http","--http.corsdomain *","--http.port 8545","--http.api personal,eth,net,web3"]
        ports:
         - "30303:30303"
         - "8545:8545"
        volumes:
         - "{{ ethnode_persistant_storage }}:/root"

    - name: "apt-get update"
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: "install nginx"
      apt:
        name: ['nginx']
        state: latest

    - name: delete default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    - name: copy nginx reversproxy.conf
      template:
        src: reversproxy.conf.j2
        dest: /etc/nginx/sites-enabled/{{ external_ip }}
        owner: root
        group: root
        mode: '0644'
      notify: restart nginx

#    - name: Create a JIRA issue
#      ansible.builtin.uri:
#        url: https://your.jira.example.com/rest/api/2/issue/
#        user: your_username
#        password: your_pass
#        method: POST
#        body: "{'jsonrpc':'2.0','method':'net_version','params':[],'id':67}"
#        force_basic_auth: yes
#        status_code: 201
#        body_format: json


#curl -X POST --data '{"jsonrpc":"2.0","method":"net_version","params":[],"id":67}' localhost:8545

    handlers:
      - name: restart nginx
        service:
          name: nginx
          state: restarted
